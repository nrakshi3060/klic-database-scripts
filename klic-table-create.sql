CREATE SCHEMA  klic;


CREATE EXTENSION IF NOT EXISTS citext;
CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TABLE "USERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "FIRST_NAME" VARCHAR(100) NOT NULL,
    "LAST_NAME" VARCHAR(100) NOT NULL,
    "USERNAME" VARCHAR(50) NOT NULL,
    "EMAIL" CITEXT UNIQUE CHECK (length("EMAIL") <= 254),
    "SIGNUP_LOCATION" GEOGRAPHY(POINT, 4326),
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE TYPE "POST_TYPE" AS ENUM ('PHOTO', 'VIDEO');

CREATE TABLE "POSTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "USER_ID" UUID NOT NULL,
    "POST_TYPE" "POST_TYPE" NOT NULL,
    "TOTAL_LIKES" INTEGER DEFAULT 0,
    "TOTAL_COMMENTS" INTEGER DEFAULT 0,
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "FK_POSTS_USER" FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID") ON DELETE CASCADE
);

CREATE EXTENSION IF NOT EXISTS postgis;

CREATE TABLE "MEDIA" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "POST_ID" UUID NOT NULL,
    "USER_ID" UUID NOT NULL,
    "MEDIA_PATH" TEXT NOT NULL,
    "TAKEN_LOCATION" GEOGRAPHY(POINT, 4326),
    "UPLOADED_LOCATION" GEOGRAPHY(POINT, 4326),
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "FK_MEDIA_POST" FOREIGN KEY ("POST_ID")
        REFERENCES "POSTS" ("ID") ON DELETE CASCADE,
    CONSTRAINT "FK_MEDIA_USER" FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID") ON DELETE CASCADE
);


CREATE TABLE "POST_COMMENTS" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "POST_ID" UUID NOT NULL,
    "USER_ID" UUID NOT NULL,
    "PARENT_COMMENT_ID" UUID NULL,
    "COMMENT_TEXT" TEXT NOT NULL,
    "TOTAL_LIKES" INTEGER DEFAULT 0,
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    -- Foreign key to POSTS table
    CONSTRAINT "FK_COMMENT_POST"
        FOREIGN KEY ("POST_ID")
        REFERENCES "POSTS" ("ID")
        ON DELETE CASCADE,

    -- Foreign key to USERS table
    CONSTRAINT "FK_COMMENT_USER"
        FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    -- Self-referencing foreign key to support comment replies
    CONSTRAINT "FK_PARENT_COMMENT"
        FOREIGN KEY ("PARENT_COMMENT_ID")
        REFERENCES "POST_COMMENTS" ("ID")
        ON DELETE CASCADE
);

CREATE TABLE "POST_LIKES" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "POST_ID" UUID NOT NULL,
    "USER_ID" UUID NOT NULL,
    "IS_LIKE" BOOLEAN DEFAULT TRUE,
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "FK_POST_LIKE_POST"
        FOREIGN KEY ("POST_ID")
        REFERENCES "POSTS" ("ID")
        ON DELETE CASCADE,

    CONSTRAINT "FK_POST_LIKE_USER"
        FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    -- Ensure a user can only like the same post once
    CONSTRAINT "UQ_POST_LIKE_USER_POST" UNIQUE ("POST_ID", "USER_ID")
);

CREATE TABLE "COMMENT_LIKES" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "COMMENT_ID" UUID NOT NULL,
    "USER_ID" UUID NOT NULL,
    "IS_LIKE" BOOLEAN DEFAULT TRUE,
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "FK_COMMENT_LIKE_COMMENT"
        FOREIGN KEY ("COMMENT_ID")
        REFERENCES "POST_COMMENTS" ("ID")
        ON DELETE CASCADE,

    CONSTRAINT "FK_COMMENT_LIKE_USER"
        FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    CONSTRAINT "UQ_COMMENT_LIKE_USER_COMMENT"
        UNIQUE ("COMMENT_ID", "USER_ID")
);

CREATE TABLE "USER_FOLLOWERS" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),
    "USER_ID" UUID NOT NULL,        -- The user being followed
    "FOLLOWER_ID" UUID NOT NULL,   -- The user who follows
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    CONSTRAINT "FK_USER_FOLLOWED"
        FOREIGN KEY ("USER_ID")
        REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    CONSTRAINT "FK_USER_FOLLOWER"
        FOREIGN KEY ("FOLLOWER_ID")
        REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    -- Prevent same user from following the same person twice
    CONSTRAINT "UQ_USER_FOLLOWER_PAIR"
        UNIQUE ("USER_ID", "FOLLOWER_ID"),

    -- Prevent users from following themselves
    CONSTRAINT "CHK_NO_SELF_FOLLOW"
        CHECK ("USER_ID" <> "FOLLOWER_ID")
);

CREATE TABLE "USER_FEED" (
    "ID" UUID PRIMARY KEY DEFAULT uuidv7(),

    -- The user who receives the feed item
    "USER_ID" UUID NOT NULL,

    -- Reference to the related post
    "POST_ID" UUID NULL,

    -- Timestamps
    "CREATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    "UPDATE_DATE_TIME" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,

    -- Foreign keys
    CONSTRAINT "FK_FEED_USER"
        FOREIGN KEY ("USER_ID") REFERENCES "USERS" ("ID")
        ON DELETE CASCADE,

    CONSTRAINT "FK_FEED_POST"
        FOREIGN KEY ("POST_ID") REFERENCES "POSTS" ("ID")
        ON DELETE SET NULL

);



commit;
